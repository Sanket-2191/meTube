{
    "openapi": "3.0.4",
    "info": {
        "version": "1.1.0",
        "description": "API for video streaming application",
        "title": "meTube"
    },
    "servers": [
        {
            "url": "https://metube-88dp.onrender.com/",
            "description": "Sever is Live."
        }
    ],
    "components": {
        "securitySchemes": {
            "JWT": {
                "in": "header",
                "name": "Authorization",
                "type": "apiKey"
            }
        }
    },
    "paths": {
        "/api/v1/users/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Registers a new user.",
                "description": "Enter your email, username, fullName, password, avatar, and coverImage to create a new profile.",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "fullname": {
                                        "type": "string"
                                    },
                                    "coverimage": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "username",
                                    "fullname",
                                    "password",
                                    "avatar"
                                ]
                            },
                            "encoding": {
                                "coverImage": {
                                    "contentType": "image/png, image/jpeg"
                                },
                                "avatar": {
                                    "contentType": "image/png, image/jpeg"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New User Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisterUserResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already exists."
                    },
                    "5XX": {
                        "description": "Something went wrong while registering a user."
                    }
                }
            }
        },
        "/api/v1/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Logs in an existing user.",
                "description": "Enter your email and password to log in to your profile.",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/v1/users/channelDetails/{username}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Gets the channel details of a user with the given 'username'.",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channel details retrieved successfully."
                    },
                    "404": {
                        "description": "User not found."
                    }
                }
            }
        },
        "/api/v1/users/logout": {
            "get": {
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Logs a user out of the account.",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    }
                }
            }
        },
        "/api/v1/users/newAuthenticationTokens": {
            "get": {
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Generates new access token for login if you have not explicitly logged-out.",
                "responses": {
                    "200": {
                        "description": "new accessToken created."
                    },
                    "4XX": {
                        "description": "No logged-in user noted."
                    },
                    "5XX": {
                        "description": "Something went wrong while creating new accessToken for a user."
                    }
                }
            }
        },
        "/api/v1/users/currentUserProfile": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Gets Profile info of loggedIn user.",
                "security": [
                    {
                        "JWT": {}
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/changePassword": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Change old password.",
                "security": [
                    {
                        "JWT": {}
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "oldPassword": {
                                        "type": "string"
                                    },
                                    "newPassword": {
                                        "type": "string"
                                    }
                                },
                                "newPassword": [
                                    "oldPassword",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {}
            }
        },
        "/api/v1/users/change-email-fullName": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Update user email and fullname.",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "fullName": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "fullName",
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User-email and fullname update successful"
                    }
                }
            }
        },
        "/api/v1/users/change-avatar": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update avatar.",
                "security": [
                    {
                        "JWT": {}
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "avatar": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "required": [
                                    "avatar"
                                ]
                            },
                            "encoding": {
                                "avatar": {
                                    "contentType": "image/png, image/jpeg"
                                }
                            }
                        }
                    }
                },
                "responses": {}
            }
        },
        "/api/v1/users/change-coverImage": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update CoverImage.",
                "security": [
                    {
                        "JWT": {}
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "coverImage": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "required": [
                                    "coverImage"
                                ]
                            },
                            "encoding": {
                                "coverImage": {
                                    "contentType": "image/png, image/jpeg"
                                }
                            }
                        }
                    }
                },
                "responses": {}
            }
        },
        "/api/v1/users/add-to-watchHistory/{videoId}": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "add video to watchHistory.",
                "security": [
                    {
                        "JWT": {}
                    }
                ],
                "requestBody": {
                    "content": {
                        "parameters": [
                            {
                                "name": "videoId",
                                "in": "path",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                }
                            }
                        ]
                    }
                },
                "responses": {}
            }
        },
        "/api/v1/users/watchHistory": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get users watch history.",
                "security": [
                    {
                        "JWT": {}
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/videos": {
            "get": {
                "summary": "Get all published videos",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of results per page"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search term for video title or description"
                    },
                    {
                        "in": "query",
                        "name": "sortBy",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Field to sort by"
                    },
                    {
                        "in": "query",
                        "name": "sortType",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "description": "Sort direction"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of published videos"
                    }
                }
            },
            "post": {
                "summary": "Upload and publish a new video",
                "tags": [
                    "Videos"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "video",
                                    "thumbnail",
                                    "title",
                                    "description"
                                ],
                                "properties": {
                                    "video": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "thumbnail": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            },
                            "encoding": {
                                "thumbnail": {
                                    "contentType": "image/png, image/jpeg"
                                },
                                "video": {
                                    "contentType": "video/mp4"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Video uploaded successfully"
                    }
                }
            }
        },
        "/api/v1/videos/{videoId}": {
            "get": {
                "summary": "Get video details by ID",
                "tags": [
                    "Videos"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "videoId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video fetched successfully"
                    }
                }
            },
            "patch": {
                "summary": "Update video title/description",
                "tags": [
                    "Videos"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "videoId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Video updated successfully"
                    }
                }
            },
            "delete": {
                "summary": "Delete a video",
                "tags": [
                    "Videos"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "videoId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video deleted successfully"
                    }
                }
            }
        },
        "/api/v1/videos/video-thumbnail/{videoId}": {
            "patch": {
                "summary": "Update video thumbnail",
                "tags": [
                    "Videos"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "videoId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "thumbnail"
                                ],
                                "properties": {
                                    "thumbnail": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            },
                            "encoding": {
                                "thumbnail": {
                                    "contentType": "image/png, image/jpeg"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Thumbnail updated successfully"
                    }
                }
            }
        },
        "/api/v1/videos/publish-status/{videoId}": {
            "patch": {
                "summary": "Toggle publish status of a video",
                "tags": [
                    "Videos"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "videoId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Publish status changed successfully"
                    }
                }
            }
        },
        "/api/v1/tweets": {
            "post": {
                "summary": "Create a new tweet",
                "tags": [
                    "Tweet"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tweetContent": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "tweetContent"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tweet created successfully"
                    },
                    "400": {
                        "description": "Tweet cannot be empty"
                    }
                }
            }
        },
        "/api/v1/tweets/user": {
            "get": {
                "summary": "Get all tweets of the logged-in user",
                "tags": [
                    "Tweet"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User tweets fetched successfully"
                    },
                    "500": {
                        "description": "Something went wrong while fetching user tweets"
                    }
                }
            }
        },
        "/api/v1/tweets/{tweetId}": {
            "patch": {
                "summary": "Update a tweet",
                "tags": [
                    "Tweet"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tweetId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tweetUpdateContent": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "tweetUpdateContent"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tweet updated successfully"
                    },
                    "400": {
                        "description": "Invalid request or tweet ID"
                    },
                    "402": {
                        "description": "Cannot edit other user's tweet"
                    }
                }
            },
            "delete": {
                "summary": "Delete a tweet",
                "tags": [
                    "Tweet"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tweetId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tweet deleted successfully"
                    },
                    "400": {
                        "description": "Invalid tweet ID"
                    },
                    "402": {
                        "description": "Cannot delete other user's tweet"
                    }
                }
            }
        },
        "/api/v1/playlist": {
            "post": {
                "summary": "Create a new playlist",
                "tags": [
                    "Playlist"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Playlist created successfully"
                    },
                    "400": {
                        "description": "Missing playlist name"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/playlist/user/{userId}": {
            "get": {
                "summary": "Get playlists of a specific user",
                "tags": [
                    "Playlist"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User playlists fetched successfully"
                    },
                    "400": {
                        "description": "Invalid user ID"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/playlist/{playlistId}": {
            "get": {
                "summary": "Get playlist by ID",
                "tags": [
                    "Playlist"
                ],
                "parameters": [
                    {
                        "name": "playlistId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Playlist retrieved successfully"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "summary": "Delete playlist by ID",
                "tags": [
                    "Playlist"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "playlistId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Playlist deleted successfully"
                    },
                    "400": {
                        "description": "Invalid playlist ID"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "patch": {
                "summary": "Update playlist name or description",
                "tags": [
                    "Playlist"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "playlistId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Playlist updated successfully"
                    },
                    "400": {
                        "description": "Invalid playlist ID"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/playlist/{playlistId}/{videoId}": {
            "patch": {
                "summary": "Add video to playlist",
                "tags": [
                    "Playlist"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "playlistId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "videoId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Video added to playlist successfully"
                    },
                    "400": {
                        "description": "Invalid IDs"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "summary": "Remove video from playlist",
                "tags": [
                    "Playlist"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "playlistId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "videoId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Video removed from playlist successfully"
                    },
                    "400": {
                        "description": "Invalid IDs"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/likes/video/{videoId}": {
            "post": {
                "summary": "Like or unlike a video",
                "tags": [
                    "Likes"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "videoId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the video to like/unlike"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video unliked successfully"
                    },
                    "201": {
                        "description": "Video liked successfully"
                    }
                }
            }
        },
        "/api/v1/likes/comment/{commentId}": {
            "post": {
                "summary": "Like or unlike a comment",
                "tags": [
                    "Likes"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "commentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the comment to like/unlike"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment unliked successfully"
                    },
                    "201": {
                        "description": "Comment liked successfully"
                    }
                }
            }
        },
        "/api/v1/likes/tweet/{tweetId}": {
            "post": {
                "summary": "Like or unlike a tweet",
                "tags": [
                    "Likes"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "tweetId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the tweet to like/unlike"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tweet unliked successfully"
                    },
                    "201": {
                        "description": "Tweet liked successfully"
                    }
                }
            }
        },
        "/api/v1/likes/liked-videos": {
            "get": {
                "summary": "Get all liked videos by the user",
                "tags": [
                    "Likes"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of liked videos"
                    }
                }
            }
        },
        "/api/v1/comments/video/{videoId}": {
            "get": {
                "summary": "Get all comments on a video",
                "tags": [
                    "Comments"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "videoId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the video to fetch comments for"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of comments per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments fetched successfully"
                    }
                }
            }
        },
        "/api/v1/comments/comment/{videoId}": {
            "post": {
                "summary": "Add a comment to a video",
                "tags": [
                    "Comments"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "videoId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the video to comment on"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "commentContent"
                                ],
                                "properties": {
                                    "commentContent": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment created successfully"
                    }
                }
            }
        },
        "/api/v1/comments/comment/{commentId}": {
            "patch": {
                "summary": "Update a comment",
                "tags": [
                    "Comments"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "commentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the comment to update"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "commentUpdateContent"
                                ],
                                "properties": {
                                    "commentUpdateContent": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment updated successfully"
                    }
                }
            },
            "delete": {
                "summary": "Delete a comment",
                "tags": [
                    "Comments"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "commentId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the comment to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted successfully"
                    }
                }
            }
        },
        "/api/v1/dashboard/stats": {
            "get": {
                "summary": "Get channel stats for authenticated user",
                "tags": [
                    "Dashboard"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user's channel stats"
                    },
                    "500": {
                        "description": "Something went wrong while fetching channel stats"
                    }
                }
            }
        },
        "/api/v1/dashboard/videos": {
            "get": {
                "summary": "Get all videos uploaded by authenticated user",
                "tags": [
                    "Dashboard"
                ],
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user's channel videos"
                    },
                    "500": {
                        "description": "Something went wrong while fetching channel videos"
                    }
                }
            }
        }
    }
}